{
  "name": "beer",
  "version": "0.0.8",
  "description": "a simple useful wrapper of request",
  "main": "index.js",
  "author": {
    "name": "turingou"
  },
  "license": "MIT",
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha ./test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/turingou/beer"
  },
  "keywords": [
    "beer",
    "request",
    "api",
    "sdk"
  ],
  "bugs": {
    "url": "https://github.com/turingou/beer/issues"
  },
  "dependencies": {
    "request": "*",
    "underscore": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "readme": "![logo](https://cdn2.iconfinder.com/data/icons/fatcow/32/beer.png) beer ![npm](https://badge.fury.io/js/beer.png)\n======\n\na useful warpper of request. have a drink and waiting for results callback.\n\n### How to install \n\n````\n$ npm install beer\n````\n\n### Sample code\n\n````javascript\nvar beer = require('beer');\n\nbeer.get(\"http://google/com\",{\n    query: {\n        param: 1,\n        param2: 2\n    }\n},function(err,result){\n    if (!err) {\n        // enjoy !\n        console.log(result)\n    } else {\n        console.log('Opps !!');\n    }\n});\n````\n\n### API\n\n#### beer.get(url,params,callback)\n\n- `url` [String]\n- `params` [Object]\n    - `query`\n        - `key` : `value` : params will join `URL` as `?key=value`\n- `callback` [Funtion]\n    - error : null or error object\n    - result : fetch result\n\n#### beer.post(url,params,callback)\n\n- `url` [String]\n- `params` [Object] sent as `form`\n    - `key` : `value`\n- `callback` [Funtion]\n    - error : null or error object\n    - result : fetch result\n\n### Run unit-test (Mocha)\n\n````\n$ git clone https://github.com/turingou/beer.git\n$ cd beer\n$ npm install // will install mocha localy\n$ npm test\n````",
  "readmeFilename": "README.md",
  "_id": "beer@0.0.8",
  "dist": {
    "shasum": "394955297de87c4de3847cb958f854658bc84c76"
  },
  "_from": "beer@*",
  "_resolved": "https://registry.npmjs.org/beer/-/beer-0.0.8.tgz"
}
